#!/bin/bash

set -e

config="$(cat <&0)"

echo "Parsing source" >&2

client_id=$(echo "$config" | jq -Mr '.source.client_id')
client_secret=$(echo "$config" | jq -Mr '.source.client_secret')
cloud_id=$(echo "$config" | jq -Mr '.source.cloud_id')

if [[ -z "$client_id" ]]; then
  echo "must define 'client_id' in source config" >&2
  exit 1
fi

if [[ -z "$client_secret" ]]; then
  echo "must define 'client_secret' in source config" >&2
  exit 1
fi

if [[ -z "$cloud_id" ]]; then
	echo "must define 'cloud_id' in source config" >&2
	exit 1
fi

echo "Parsing params" >&2

conversation=$(echo "$config" | jq -Mr '.params.conversation')

if [[ -z "$conversation" ]]; then
  echo "must define 'conversation' in out params" >&2
  exit 1
fi

if [[ "$(echo "$config" | jq -Mr '.params | has("document")')" == "false" && "$(echo "$config" | jq -Mr '.params | has("message")')" == "false" ]]; then
  echo "must define 'message' or 'document' in out params" >&2
  exit 1
fi

if [[ "$(echo "$config" | jq -Mr '.params | has("document")')" == "true" ]]; then
  document="$(echo "$config" | jq -Mr '.params.document')"
else
  document='{
      "version": 1,
      "type": "doc",
      "content": [
        {
          "type": "paragraph",
          "content": [
            {
              "type": "text",
              "text": "'"$(echo "$config" | jq -Mr '.params.message')"'"
            }
          ]
        }
      ]
    }'
fi

echo "Getting access token" >&2

access_token="$(\
  curl -X POST \
  'https://api.atlassian.com/oauth/token' \
  -H 'content-type: application/json' \
  -d '{
        "grant_type":"client_credentials",
        "client_id": "'"${client_id}"'",
        "client_secret": "'"${client_secret}"'"
      }' 2>/dev/null \
  | jq .access_token -Mr)"

echo "Looking up conversation ID" >&2

conv_id="$(\
  curl "https://api.atlassian.com/site/${cloud_id}/conversation" \
  -H "Authorization: Bearer ${access_token}" 2>/dev/null \
  | jq '.values[] | select(.name == "'"${conversation}"'") | .id' -Mr)"

echo "Sending the message" >&2

response=$(curl -s -w "HTTPSTATUS:%{http_code}" -X POST \
"https://api.atlassian.com/site/${cloud_id}/conversation/${conv_id}/message" \
-H "Authorization: Bearer ${access_token}" \
-H "Content-Type: application/json" \
-d "${document}" 2>/dev/null)

response_body="$(echo "$response" | sed -e 's/HTTPSTATUS\:.*//g')"
status_code="$(echo "$response" | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')"

if [[ "$status_code" != "201" ]]; then
  echo "Non-successful status code: " "$status_code" >&2
  echo "$response_body" >&2
  exit 1
fi

echo '{
        "version": {
          "ref": "none"
        }
      }'
